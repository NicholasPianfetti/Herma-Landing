{"ast":null,"code":"import ReactGA from 'react-ga4';\n\n/**\r\n * Enhanced download handler with free/paid version support\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n * @param {string} version - The version type ('free' or 'paid')\r\n * @param {function} navigate - React Router navigate function\r\n */\nconst handleDownload = (platform, version = 'free', navigate = null) => {\n  // Get additional context information\n  const referrer = document.referrer || 'direct';\n  const screenSize = `${window.innerWidth}x${window.innerHeight}`;\n  const deviceType = window.innerWidth <= 768 ? 'mobile' : window.innerWidth <= 1024 ? 'tablet' : 'desktop';\n  const timeOnPage = Math.round(performance.now() / 1000);\n\n  // Track the download attempt\n  ReactGA.event({\n    category: 'App Downloads',\n    action: 'download_attempt',\n    label: `${platform}_${version}`,\n    value: 1,\n    nonInteraction: false,\n    app_version: 'v0.1.0',\n    device_type: deviceType,\n    screen_size: screenSize,\n    time_before_download: timeOnPage,\n    referrer: referrer,\n    version_type: version,\n    send_to: 'G-FSS7V9WPY5'\n  });\n\n  // Handle paid version - redirect to payment page\n  if (version === 'paid') {\n    if (navigate) {\n      // Store the platform preference in sessionStorage for after payment\n      sessionStorage.setItem('selectedPlatform', platform);\n      sessionStorage.setItem('downloadIntent', 'paid');\n\n      // Track paid version interest\n      ReactGA.event({\n        category: 'Conversion',\n        action: 'paid_version_interest',\n        label: platform,\n        send_to: 'G-FSS7V9WPY5'\n      });\n\n      // Navigate to payment page\n      navigate('/checkout');\n      return;\n    } else {\n      console.error('Navigate function not provided for paid version');\n      return;\n    }\n  }\n\n  // Handle free version download\n  handleFreeDownload(platform);\n};\n\n/**\r\n * Handles free version download\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n */\nconst handleFreeDownload = platform => {\n  // Define free version download URLs (temporary variables for easy change)\n  const FREE_REPO_WINDOWS = 'https://github.com/NicholasPianfetti/Herma-Landing/releases/download/v0.1.0/Herma-0.1.0.msi';\n  const FREE_REPO_MAC = 'https://github.com/USER/Herma-Landing/releases/download/v0.1.0/Herma-0.1.0.dmg';\n  const freeDownloadUrls = {\n    windows: FREE_REPO_WINDOWS,\n    mac: FREE_REPO_MAC\n  };\n  const downloadUrl = freeDownloadUrls[platform];\n  if (!downloadUrl) {\n    console.error(`Invalid platform for free version: ${platform}`);\n    ReactGA.event({\n      category: 'Error',\n      action: 'FreeDownloadError',\n      label: `Invalid platform: ${platform}`,\n      nonInteraction: true\n    });\n    return;\n  }\n\n  // Track free download initiation\n  ReactGA.event({\n    category: 'App Downloads',\n    action: 'free_download_initiated',\n    label: platform\n  });\n\n  // Create download link\n  const link = document.createElement('a');\n  link.href = downloadUrl;\n  link.download = platform === 'windows' ? 'Herma-Free-0.1.0.msi' : 'Herma-Free-0.1.0.dmg';\n  link.style.display = 'none';\n  link.setAttribute('data-download-platform', platform);\n  link.setAttribute('data-download-version', 'free');\n\n  // Execute download\n  document.body.appendChild(link);\n  link.click();\n  setTimeout(() => {\n    document.body.removeChild(link);\n    ReactGA.event({\n      category: 'App Downloads',\n      action: 'free_download_completed',\n      label: platform\n    });\n  }, 1000);\n};\n\n/**\r\n * Handles paid version download (called after successful payment)\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n * @param {string} userId - The user's ID from payment system\r\n */\nconst handlePaidDownload = (platform, userId) => {\n  // Define paid version download URLs (temporary variables for easy change)\n  const PAID_REPO_WINDOWS = 'https://github.com/NicholasPianfetti/Herma-Releases/releases/download/v0.1.20/Herma-Setup-0.1.20.exe';\n  const PAID_REPO_MAC = 'https://github.com/NicholasPianfetti/Herma-Releases/releases/download/v0.1.20/Herma-Pro-0.1.0.dmg';\n  const paidDownloadUrls = {\n    windows: PAID_REPO_WINDOWS,\n    mac: PAID_REPO_MAC\n  };\n  const downloadUrl = paidDownloadUrls[platform];\n  if (!downloadUrl) {\n    console.error(`Invalid platform for paid version: ${platform}`);\n    return;\n  }\n\n  // Track paid download\n  ReactGA.event({\n    category: 'App Downloads',\n    action: 'paid_download_completed',\n    label: platform,\n    value: 1,\n    // This represents a conversion\n    send_to: 'G-FSS7V9WPY5'\n  });\n\n  // Create download link\n  const link = document.createElement('a');\n  link.href = downloadUrl;\n  link.download = platform === 'windows' ? 'Herma-Pro-0.1.0.msi' : 'Herma-Pro-0.1.0.dmg';\n  link.style.display = 'none';\n  link.setAttribute('data-download-platform', platform);\n  link.setAttribute('data-download-version', 'paid');\n  link.setAttribute('data-user-id', userId);\n\n  // Execute download\n  document.body.appendChild(link);\n  link.click();\n  setTimeout(() => {\n    document.body.removeChild(link);\n  }, 1000);\n};\nexport default handleDownload;\nexport { handleFreeDownload, handlePaidDownload };","map":{"version":3,"names":["ReactGA","handleDownload","platform","version","navigate","referrer","document","screenSize","window","innerWidth","innerHeight","deviceType","timeOnPage","Math","round","performance","now","event","category","action","label","value","nonInteraction","app_version","device_type","screen_size","time_before_download","version_type","send_to","sessionStorage","setItem","console","error","handleFreeDownload","FREE_REPO_WINDOWS","FREE_REPO_MAC","freeDownloadUrls","windows","mac","downloadUrl","link","createElement","href","download","style","display","setAttribute","body","appendChild","click","setTimeout","removeChild","handlePaidDownload","userId","PAID_REPO_WINDOWS","PAID_REPO_MAC","paidDownloadUrls"],"sources":["C:/Users/nickp/OneDrive/GT Classes/Spring 2025/Herma/Landing/Herma-Landing/frontend/src/components/handleDownload.jsx"],"sourcesContent":["import ReactGA from 'react-ga4';\r\n\r\n/**\r\n * Enhanced download handler with free/paid version support\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n * @param {string} version - The version type ('free' or 'paid')\r\n * @param {function} navigate - React Router navigate function\r\n */\r\nconst handleDownload = (platform, version = 'free', navigate = null) => {\r\n  // Get additional context information\r\n  const referrer = document.referrer || 'direct';\r\n  const screenSize = `${window.innerWidth}x${window.innerHeight}`;\r\n  const deviceType = window.innerWidth <= 768 ? 'mobile' : \r\n                    (window.innerWidth <= 1024 ? 'tablet' : 'desktop');\r\n  const timeOnPage = Math.round(performance.now() / 1000);\r\n  \r\n  // Track the download attempt\r\n  ReactGA.event({\r\n    category: 'App Downloads',\r\n    action: 'download_attempt',\r\n    label: `${platform}_${version}`,\r\n    value: 1,\r\n    nonInteraction: false,\r\n    app_version: 'v0.1.0',\r\n    device_type: deviceType,\r\n    screen_size: screenSize,\r\n    time_before_download: timeOnPage,\r\n    referrer: referrer,\r\n    version_type: version,\r\n    send_to: 'G-FSS7V9WPY5'\r\n  });\r\n\r\n  // Handle paid version - redirect to payment page\r\n  if (version === 'paid') {\r\n    if (navigate) {\r\n      // Store the platform preference in sessionStorage for after payment\r\n      sessionStorage.setItem('selectedPlatform', platform);\r\n      sessionStorage.setItem('downloadIntent', 'paid');\r\n      \r\n      // Track paid version interest\r\n      ReactGA.event({\r\n        category: 'Conversion',\r\n        action: 'paid_version_interest',\r\n        label: platform,\r\n        send_to: 'G-FSS7V9WPY5'\r\n      });\r\n      \r\n      // Navigate to payment page\r\n      navigate('/checkout');\r\n      return;\r\n    } else {\r\n      console.error('Navigate function not provided for paid version');\r\n      return;\r\n    }\r\n  }\r\n\r\n  // Handle free version download\r\n  handleFreeDownload(platform);\r\n};\r\n\r\n/**\r\n * Handles free version download\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n */\r\nconst handleFreeDownload = (platform) => {\r\n  // Define free version download URLs (temporary variables for easy change)\r\n  const FREE_REPO_WINDOWS = 'https://github.com/NicholasPianfetti/Herma-Landing/releases/download/v0.1.0/Herma-0.1.0.msi';\r\n  const FREE_REPO_MAC = 'https://github.com/USER/Herma-Landing/releases/download/v0.1.0/Herma-0.1.0.dmg';\r\n  \r\n  const freeDownloadUrls = {\r\n    windows: FREE_REPO_WINDOWS,\r\n    mac: FREE_REPO_MAC,\r\n  };\r\n  \r\n  const downloadUrl = freeDownloadUrls[platform];\r\n  \r\n  if (!downloadUrl) {\r\n    console.error(`Invalid platform for free version: ${platform}`);\r\n    ReactGA.event({\r\n      category: 'Error',\r\n      action: 'FreeDownloadError',\r\n      label: `Invalid platform: ${platform}`,\r\n      nonInteraction: true\r\n    });\r\n    return;\r\n  }\r\n  \r\n  // Track free download initiation\r\n  ReactGA.event({\r\n    category: 'App Downloads',\r\n    action: 'free_download_initiated',\r\n    label: platform\r\n  });\r\n  \r\n  // Create download link\r\n  const link = document.createElement('a');\r\n  link.href = downloadUrl;\r\n  link.download = platform === 'windows' ? 'Herma-Free-0.1.0.msi' : 'Herma-Free-0.1.0.dmg';\r\n  link.style.display = 'none';\r\n  link.setAttribute('data-download-platform', platform);\r\n  link.setAttribute('data-download-version', 'free');\r\n  \r\n  // Execute download\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  \r\n  setTimeout(() => {\r\n    document.body.removeChild(link);\r\n    ReactGA.event({\r\n      category: 'App Downloads',\r\n      action: 'free_download_completed',\r\n      label: platform\r\n    });\r\n  }, 1000);\r\n};\r\n\r\n/**\r\n * Handles paid version download (called after successful payment)\r\n * @param {string} platform - The platform ('windows' or 'mac')\r\n * @param {string} userId - The user's ID from payment system\r\n */\r\nconst handlePaidDownload = (platform, userId) => {\r\n  // Define paid version download URLs (temporary variables for easy change)\r\n  const PAID_REPO_WINDOWS = 'https://github.com/NicholasPianfetti/Herma-Releases/releases/download/v0.1.20/Herma-Setup-0.1.20.exe';\r\n  const PAID_REPO_MAC = 'https://github.com/NicholasPianfetti/Herma-Releases/releases/download/v0.1.20/Herma-Pro-0.1.0.dmg';\r\n  \r\n  const paidDownloadUrls = {\r\n    windows: PAID_REPO_WINDOWS,\r\n    mac: PAID_REPO_MAC,\r\n  };\r\n  \r\n  const downloadUrl = paidDownloadUrls[platform];\r\n  \r\n  if (!downloadUrl) {\r\n    console.error(`Invalid platform for paid version: ${platform}`);\r\n    return;\r\n  }\r\n  \r\n  // Track paid download\r\n  ReactGA.event({\r\n    category: 'App Downloads',\r\n    action: 'paid_download_completed',\r\n    label: platform,\r\n    value: 1, // This represents a conversion\r\n    send_to: 'G-FSS7V9WPY5'\r\n  });\r\n  \r\n  // Create download link\r\n  const link = document.createElement('a');\r\n  link.href = downloadUrl;\r\n  link.download = platform === 'windows' ? 'Herma-Pro-0.1.0.msi' : 'Herma-Pro-0.1.0.dmg';\r\n  link.style.display = 'none';\r\n  link.setAttribute('data-download-platform', platform);\r\n  link.setAttribute('data-download-version', 'paid');\r\n  link.setAttribute('data-user-id', userId);\r\n  \r\n  // Execute download\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  \r\n  setTimeout(() => {\r\n    document.body.removeChild(link);\r\n  }, 1000);\r\n};\r\n\r\nexport default handleDownload;\r\nexport { handleFreeDownload, handlePaidDownload };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}